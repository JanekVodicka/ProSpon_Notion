import osimport pyodbcfrom notion_client import Clientfrom dotenv import load_dotenv# ------------------------# 1Ô∏è‚É£ P≈ôipojen√≠ k SQL Serveru# ------------------------load_dotenv()server = os.getenv('DATABASE_SERVER')database = os.getenv('DATABASE_NAME')username = os.getenv('DATABASE_USERNAME')password = os.getenv('DATABASE_PASSWORD')print("P≈òIPOJEN√ç K SQL SERVERU:")print("Server:", server)print("Database:", database)print("User:", username)print("Password:", password)print("P≈ôipojen√≠ √öSPƒö≈†N√â üëç")print("-" * 50)conn = pyodbc.connect(    f"DRIVER={{ODBC Driver 17 for SQL Server}};"    f"SERVER={server};"    f"DATABASE={database};"    f"UID={username};"    f"PWD={password}")cursor = conn.cursor()cursor.execute("""    SELECT produkt, referent, popis, u_Datum_odeslani, u_Datum_operace, u_StavCM    FROM dbo.Katalog    WHERE referent = 'Vodiƒçka Jan'    AND produkt LIKE 'CM25%'    AND produkt NOT LIKE '%.%'""")rows = cursor.fetchall()# ------------------------# 2Ô∏è‚É£ P≈ôipojen√≠ k Notion# ------------------------notion_token = os.getenv('NOTION_TOKEN')database_id = os.getenv('DATABASE_ID')notion = Client(auth=notion_token)print("P≈òIPOJEN√ç K NOTION:")print("NOTION TOKEN: ", notion_token)print("DATABASE ID: ", database_id)print("P≈ôipojen√≠ √öSPƒö≈†N√â üëç")print("-" * 50)def get_cm_in_notion(cm_number):    response = notion.databases.query(        **{            "database_id": database_id,            "filter": {                "property": "ƒå√≠slo CM",                "title": {                    "equals": cm_number                }            }        }    )    if response["results"]:        return response["results"][0]  # vr√°t√≠me prvn√≠ z√°znam - √∫plnƒõ v≈°echny metadata    return None# ------------------------# 3Ô∏è‚É£ Synchronizace dat# ------------------------for row in rows:    produkt = str(row.produkt)    popis = str(row.popis)    stavCM = str(row.u_StavCM)    datum_odeslani = row.u_Datum_odeslani    datum_operace = row.u_Datum_operace    datum_operace_str = datum_operace.strftime("%Y-%m-%d") if datum_operace else None    datum_odeslani_str = datum_odeslani.strftime("%Y-%m-%d") if datum_odeslani else None    existing_page = get_cm_in_notion(produkt)    if existing_page is None:        notion.pages.create(            **{                "parent": {"database_id": database_id},                "properties": {                    "ƒå√≠slo CM": {                        "title": [                            {                                "text": {"content": produkt}                            }                        ]                    },                    "Datum operace": {"date": {"start": datum_operace_str}} if datum_operace_str else {"date": None},                    "Datum odesl√°n√≠": {"date": {"start": datum_odeslani_str}} if datum_odeslani_str else {"date": None},                    "Popis": {                        "rich_text": [                            {                                "text": {                                    "content": popis if popis else None                                }                            }                        ]                    },                    "Stav CM": {                        "status": {                            "name": stavCM if stavCM else None                        }                    }                }            }        )        print(f"P≈ôid√°n nov√Ω z√°znam: {produkt}")    else:        page_id = existing_page["id"]        notion_data = existing_page["properties"]        notion_popis = notion_data["Popis"]["rich_text"] if notion_data["Popis"]["rich_text"] else None        notion_stavCM = notion_data["Stav CM"]["status"]["name"] if notion_data["Stav CM"]["status"]["name"] else None        notion_datum_operace = notion_data["Datum operace"]["date"]["start"] if notion_data["Datum operace"]["date"] else None        notion_datum_odeslani = notion_data["Datum odesl√°n√≠"]["date"]["start"] if notion_data["Datum odesl√°n√≠"]["date"] else None        if notion_datum_operace != datum_operace or notion_datum_odeslani != datum_odeslani or notion_popis != popis or notion_stavCM != stavCM:            notion.pages.update(                **{                    "page_id": page_id,                    "properties": {                        "Datum operace": {"date": {"start": datum_operace_str}} if datum_operace_str else {"date": None},                        "Datum odesl√°n√≠": {"date": {"start": datum_odeslani_str}} if datum_odeslani_str else {"date": None},                        "Popis": {                            "rich_text": [                                {                                    "text": {                                        "content": popis                                    }                                }                            ]                        },                        "Stav CM": {                            "status": {                                "name": stavCM if stavCM else None                            }                        }                    },                }            )            print(f"Aktualizov√°n z√°znam: {produkt}")        else:            print(f"Beze zmƒõny: {produkt}")print("‚úÖ Synchronizace dokonƒçena!")