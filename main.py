import osimport pyodbcfrom notion_client import Clientfrom dotenv import load_dotenvfrom dateutil import parser# ------------------------# 1Ô∏è‚É£ P≈ôipojen√≠ k SQL Serveru# ------------------------load_dotenv()server = os.getenv('DATABASE_SERVER')database = os.getenv('DATABASE_NAME')username = os.getenv('DATABASE_USERNAME')password = os.getenv('DATABASE_PASSWORD')print("P≈òIPOJEN√ç K SQL SERVERU:")print("Server:", server)print("Database:", database)print("User:", username)print("Password:", password)print("P≈ôipojen√≠ √öSPƒö≈†N√â üëç")print("-" * 50)conn = pyodbc.connect(    f"DRIVER={{ODBC Driver 17 for SQL Server}};"    f"SERVER={server};"    f"DATABASE={database};"    f"UID={username};"    f"PWD={password}")cursor = conn.cursor()cursor.execute("""    SELECT produkt, referent, popis, u_Datum_odeslani, u_Datum_operace, u_StavCM, Datum_aktualizace, poznamka    FROM dbo.Katalog    WHERE referent = 'Vodiƒçka Jan'    AND produkt LIKE 'CM%'    AND produkt >= 'CM240000'    AND produkt NOT LIKE '%.%'""")rows = cursor.fetchall()print("Naƒç√≠t√°n√≠ z sql serveru:")for row in rows:    print(row)print("-" * 50)# ------------------------# 2Ô∏è‚É£ P≈ôipojen√≠ k Notion# ------------------------notion_token = os.getenv('NOTION_TOKEN')database_id = os.getenv('DATABASE_ID')notion = Client(auth=notion_token)print("P≈òIPOJEN√ç K NOTION:")print("NOTION TOKEN: ", notion_token)print("DATABASE ID: ", database_id)print("P≈ôipojen√≠ √öSPƒö≈†N√â üëç")print("-" * 50)def get_cm_in_notion(cm_number):    response = notion.databases.query(        **{            "database_id": database_id,            "filter": {                "property": "ƒå√≠slo CM",                "title": {                    "equals": cm_number                }            }        }    )    if response["results"]:        return response["results"][0]  # vr√°t√≠me prvn√≠ z√°znam - √∫plnƒõ v≈°echny metadata    return None# ------------------------# 3Ô∏è‚É£ Synchronizace dat# ------------------------print("Zaƒç√≠na synchronizace dat...")for row in rows:    produkt = str(row.produkt)    popis = str(row.popis)    poznamka = str(row.poznamka)    stavCM = str(row.u_StavCM)    if stavCM == "None":        stavCM = None    datum_odeslani = row.u_Datum_odeslani    datum_operace = row.u_Datum_operace    datum_aktualizace = row.Datum_aktualizace    datum_aktualizace = datum_aktualizace.replace(second=0, microsecond=0)    datum_operace_str = datum_operace.strftime("%Y-%m-%d") if datum_operace else None    datum_odeslani_str = datum_odeslani.strftime("%Y-%m-%d") if datum_odeslani else None    datum_aktualizace_str = datum_aktualizace.strftime("%Y-%m-%d %H:%M:%S") if datum_aktualizace else None    existing_page = get_cm_in_notion(produkt)    if existing_page is None:        print(f"Zalo≈æ nov√© CM v Notion pro produkt {produkt}")        """notion.pages.create(            **{                "parent": {"database_id": database_id},                "properties": {                    "ƒå√≠slo CM": {                        "title": [                            {                                "text": {"content": produkt}                            }                        ]                    },                    "Datum operace": {"date": {"start": datum_operace_str}} if datum_operace_str else {"date": None},                    "Datum odesl√°n√≠": {"date": {"start": datum_odeslani_str}} if datum_odeslani_str else {"date": None},                    "Datum aktualizace Varia": {"date": {"start": datum_aktualizace_str}} if datum_aktualizace_str else {"date": None},                    "Popis": {                        "rich_text": [                            {                                "text": {                                    "content": popis if popis else None                                }                            }                        ]                    },                    "Pozn√°mka": {                        "rich_text": [                            {                                "text": {                                    "content": poznamka if poznamka else None                                }                            }                        ]                    },                    "Stav CM": {                        "status": {                            "name": stavCM if stavCM else "Nov√© CM"                        }                    }                }            }        )        print(f"P≈ôid√°n nov√Ω z√°znam: {produkt}")"""    else:        page_id = existing_page["id"]        notion_data = existing_page["properties"]        stavCM_default = notion_data["Stav CM"]["status"]["name"]        notion_date_str = notion_data["Datum aktualizace Varia"]["date"]["start"] if \        notion_data["Datum aktualizace Varia"]["date"] else None        notion_date = parser.parse(notion_date_str) if notion_date_str else None        # Pro jistotu oba form√°tovat do stejn√©ho timezone, nap≈ô. UTC        if notion_date and datum_aktualizace:            notion_date = notion_date.replace(tzinfo=None)  # zahozen√≠ timezone            datum_aktualizace = datum_aktualizace.replace(tzinfo=None)        if notion_date and datum_aktualizace or notion_date is None and datum_aktualizace:            if notion_date is None or datum_aktualizace > notion_date:                notion.pages.update(                    **{                        "page_id": page_id,                        "properties": {                            "Datum operace": {"date": {"start": datum_operace_str}} if datum_operace_str else {                                "date": None},                            "Datum odesl√°n√≠": {"date": {"start": datum_odeslani_str}} if datum_odeslani_str else {                                "date": None},                            "Datum aktualizace Varia": {                                "date": {"start": datum_aktualizace_str}} if datum_aktualizace_str else {"date": None},                            "Popis": {                                "rich_text": [                                    {                                        "text": {                                            "content": popis if popis else None                                        }                                    }                                ]                            },                            "Pozn√°mka": {                                "rich_text": [                                    {                                        "text": {                                            "content": poznamka if poznamka else None                                        }                                    }                                ]                            },                            "Stav CM": {                                "status": {                                    "name": stavCM if stavCM else stavCM_default                                }                            }                        },                    }                )                print(f"Aktualizov√°n z√°znam: {produkt}")            else:                print(f"Beze zmƒõny: {produkt}")print("")print("‚úÖ Synchronizace dokonƒçena!")